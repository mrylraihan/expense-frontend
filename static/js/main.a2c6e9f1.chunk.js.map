{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/UI/Card/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Chart/ChartBar.js","components/Expenses/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","api/expenseApi.js","components/Home/Home.jsx","components/UI/Form/ExpenseForm.jsx","components/crud/CreateExpense/ExpenseCreate.js","components/crud/ModifyExpense/ModifyExpense.jsx","components/crud/ModifyExpense/UpdateExpense.jsx","components/UI/Form/ExpenseItem/ExpenseItem.jsx","components/crud/GetAllExpense/GetAllExpenses.jsx","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","Card","props","children","ExpensesFilter","selected","filterChange","onChangeFilter","ExpenseDate","newDate","Date","date","month","toLocaleString","year","getFullYear","day","ExpenseItem","title","amount","ExpensesList","mapFilteredExpense","fItems","map","ele","expensesContent","length","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoint","expenses","expense","getMonth","Expenses","filteredYear","setFilteredYear","filteredItems","items","filter","item","selectedYear","indexExpenses","get","showExpense","deleteExpense","updateExpense","createExpense","Home","setExpenses","fetchExpenses","ExpenseForm","handleSubmit","setTitle","setAmount","setDate","ExpenseCreate","createdId","setCreatedId","_id","ModifyExpense","setExpense","deleted","setDeleted","useParams","fetchData","handleDeleteClick","onClick","Spinner","animation","role","UpdateExpense","updated","setUpdated","GetAllExpenses","getList","expensesList","App","msgAlerts","setMsgAlerts","list","uuid","exact","path","element","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"maAkDeA,MA3Cf,YAA2D,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAE7C,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OAlBAC,QAAQC,IAAIH,GAIZI,qBAAU,WAER,IAAMC,EAAKC,YAAW,kBAAMP,GAAQ,KAAQ,KAO5C,OALAE,EAAaI,GAKN,WACLE,aAAaP,MAEd,IAGD,cAACQ,EAAA,EAAD,CAEEd,QAASA,EAETe,QAAS,kBAAMV,GAAQ,IAEvBW,aAAW,EAEXZ,KAAMA,EARR,SAUE,sBAAKa,UAAU,YAAf,UACE,cAACH,EAAA,EAAMI,QAAP,UAAgBjB,IAChB,mBAAGgB,UAAU,aAAb,SAA2Bf,U,wCCrC7BiB,EACJ,qCACE,cAAC,IAAD,CAASC,GAAG,IAAIH,UAAU,WAA1B,SAAqC,cAAC,IAAD,MACrC,cAAC,IAAD,CAASG,GAAG,YAAYH,UAAU,WAAlC,SAA6C,cAAC,IAAD,MAC7C,cAAC,IAAD,CAASG,GAAG,mBAAmBH,UAAU,WAAzC,SAAoD,cAAC,IAAD,MACpD,cAAC,IAAD,CAASG,GAAG,mBAAmBH,UAAU,WAAzC,SAAoD,cAAC,IAAD,MACpD,cAAC,IAAD,CAASG,GAAG,YAAYH,UAAU,WAAlC,SAA6C,cAAC,IAAD,SAI3CI,EACJ,qCACE,cAAC,IAAD,CAASD,GAAG,IAAIH,UAAU,WAA1B,SAAqC,cAAC,IAAD,MACrC,cAAC,IAAD,CAASG,GAAG,WAAWH,UAAU,WAAjC,SAA4C,cAAC,IAAD,MAC5C,cAAC,IAAD,CAASG,GAAG,WAAWH,UAAU,WAAjC,SAA4C,cAAC,IAAD,SA+BjCK,EApBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACb,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOzB,QAAQ,OAAO0B,OAAO,KAAxC,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,UACE,cAAC,IAAD,CAAMR,GAAG,IAAIS,MAAO,CAAEC,MAAO,OAAQC,eAAgB,QAArD,+BAEF,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiBvB,GAAG,mBAApB,SACE,eAACwB,EAAA,EAAD,CAAKlB,UAAU,UAAf,UACGM,GACC,uBAAMN,UAAU,mBAAhB,sBAA6CM,EAAKa,SAGnDb,EAAOJ,EAAuBE,a,wBC5CnCgB,EACQ,2CADRA,EAES,wBASAC,EANkB,cAA7BC,OAAOC,SAASC,SACTJ,EAEAA,E,iBCNEK,EAAS,SAACN,EAAOO,EAAUC,GACtC,OAAOC,IAAMC,KAAKR,EAAS,YAAa,CACtCS,YAAa,CACXX,QACAO,WACAK,sBAAuBJ,MAKhBK,EAAS,SAACb,EAAOO,GAC5B,OAAOE,IAAMC,KAAKR,EAAS,YAAa,CACtCS,YAAa,CACXX,QACAO,eAKOO,EAAU,SAAA3B,GACrB,OAAOsB,IAAMM,OAAOb,EAAS,aAAc,CACzCc,QAAS,CACPC,cAAc,UAAD,OAAY9B,EAAK+B,WAKvBC,EAAiB,SAACC,EAAaC,EAAalC,GACvD,OAAOsB,IAAMa,MACXpB,EAAS,oBACT,CACEqB,UAAW,CACTC,IAAKJ,EACLK,IAAKJ,IAGT,CACEL,QAAS,CACPC,cAAc,UAAD,OAAY9B,EAAK+B,W,gBCgDvBQ,EAhFA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1B,EAA0B7D,mBAAS,IAAnC,mBAAOiC,EAAP,KAAc6B,EAAd,KACA,EAAgC9D,mBAAS,IAAzC,mBAAOwC,EAAP,KAAiBuB,EAAjB,KACA,EAAwD/D,mBAAS,IAAjE,mBAAOyC,EAAP,KAA6BuB,EAA7B,KACA,EAA4ChE,oBAAS,GAArD,mBAAOiE,EAAP,KAAuBC,EAAvB,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACfD,EAAME,iBADS,kBAIP/B,EAAON,EAAOO,EAAUC,GAJjB,uBAKKK,EAAOb,EAAOO,GALnB,OAKP+B,EALO,OAMbV,EAAQU,EAAIC,KAAKpD,MACjBwC,EAAS,CACP9D,QAAS,kBACTC,QCxBqB,yDDyBrBF,QAAS,YAEXqE,GAAkB,GAZL,kDAcbJ,EAAS,IACTC,EAAY,IACZC,EAAwB,IACxBJ,EAAS,CACP9D,QAAS,8BAAgC,KAAMC,QAC/CA,QCjCqB,qEDkCrBF,QAAS,WApBE,0DAAH,sDAyBd,OAAIoE,EACK,cAAC,IAAD,CAAUhD,GAAG,MAIpB,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,yCACA,eAAC2D,EAAA,EAAD,CAAMC,SAAUP,EAAhB,UACE,eAACM,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLC,KAAK,QACLC,MAAOjD,EACPkD,YAAY,cACZC,SAAU,SAAAhB,GAAK,OAAIN,EAASM,EAAMiB,OAAOH,aAG7C,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,WACLC,MAAO1C,EACPwC,KAAK,WACLG,YAAY,WACZC,SAAU,SAAAhB,GAAK,OAAIL,EAAYK,EAAMiB,OAAOH,aAGhD,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,uBAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,oCACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,uBACLC,MAAOzC,EACPuC,KAAK,WACLG,YAAY,mBACZC,SAAU,SAAAhB,GAAK,OAAIJ,EAAwBI,EAAMiB,OAAOH,aAG5D,cAACI,EAAA,EAAD,CAAQxE,UAAU,OAAOjB,QAAQ,UAAUmF,KAAK,SAAhD,6BELKO,EApEA,SAAC,GAA2B,IAAzB3B,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1B,EAA0B7D,mBAAS,IAAnC,mBAAOiC,EAAP,KAAc6B,EAAd,KACA,EAAgC9D,mBAAS,IAAzC,mBAAOwC,EAAP,KAAiBuB,EAAjB,KACA,EAA4C/D,oBAAS,GAArD,mBAAOiE,EAAP,KAAuBC,EAAvB,KAEMsB,EAAQ,uCAAG,WAAOpB,GAAP,eAAAC,EAAA,6DACfD,EAAME,iBADS,kBAIKxB,EAAOb,EAAOO,GAJnB,OAIP+B,EAJO,OAKbV,EAAQU,EAAIC,KAAKpD,MAEjBwC,EAAS,CACP9D,QAAS,kBACTC,QDrBqB,WCsBrBF,QAAS,YAEXqE,GAAkB,GAZL,kDAcbJ,EAAS,IACTC,EAAY,IACZH,EAAS,CACP9D,QAAS,8BAAgC,KAAMC,QAC/CA,QD7BqB,kEC8BrBF,QAAS,WAnBE,0DAAH,sDAwBd,OAAIoE,EACK,cAAC,IAAD,CAAUhD,GAAG,MAIpB,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,yCACA,eAAC2D,EAAA,EAAD,CAAMC,SAAUc,EAAhB,UACE,eAACf,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLC,KAAK,QACLC,MAAOjD,EACPkD,YAAY,cACZC,SAAU,SAAAhB,GAAK,OAAIN,EAASM,EAAMiB,OAAOH,aAG7C,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,WACLC,MAAO1C,EACPwC,KAAK,WACLG,YAAY,WACZC,SAAU,SAAAhB,GAAK,OAAIL,EAAYK,EAAMiB,OAAOH,aAIhD,cAACI,EAAA,EAAD,CAAQxE,UAAU,OAAOjB,QAAQ,UAAUmF,KAAK,SAAhD,6BChCKS,EAhCC,SAAC,GAAmC,IAAjC7B,EAAgC,EAAhCA,SAAU8B,EAAsB,EAAtBA,UAAWtE,EAAW,EAAXA,KACtC,EAA4CpB,oBAAS,GAArD,mBAAOiE,EAAP,KAAuBC,EAAvB,KAwBA,OApBA3D,qBAAU,YAGY,uCAAG,sBAAA8D,EAAA,sEAEftB,EAAQ3B,GAFO,OAIrBwC,EAAS,CACP9D,QAAS,0BACTC,QFhBsB,kBEiBtBF,QAAS,YAIX6F,IACAxB,GAAkB,GAZG,2CAAH,qDAcpByB,KACC,KAEEvE,GAAQ6C,EACJ,cAAC,IAAD,CAAUhD,GAAG,MAGf,ICwCM2E,EAlEQ,SAAC,GAAwB,IAAtBhC,EAAqB,EAArBA,SAAUxC,EAAW,EAAXA,KAClC,EAAsCpB,mBAAS,IAA/C,mBAAOqD,EAAP,KAAoBwC,EAApB,KACA,EAAsC7F,mBAAS,IAA/C,mBAAOsD,EAAP,KAAoBwC,EAApB,KACA,EAA4C9F,oBAAS,GAArD,mBAAOiE,EAAP,KAAuBC,EAAvB,KAEM6B,EAAgB,uCAAG,WAAO3B,GAAP,SAAAC,EAAA,6DACvBD,EAAME,iBADiB,kBAIflB,EAAeC,EAAaC,EAAalC,GAJ1B,OAKrBwC,EAAS,CACP9D,QAAS,0BACTC,QHhB6B,iCGiB7BF,QAAS,YAEXqE,GAAkB,GAVG,gDAYrB2B,EAAe,IACfC,EAAe,IACflC,EAAS,CACP9D,QAAS,sCAAwC,KAAMC,QACvDA,QHxB6B,qEGyB7BF,QAAS,WAjBU,yDAAH,sDAsBtB,OAAKuB,GAAQ6C,EACJ,cAAC,IAAD,CAAUhD,GAAG,MAIpB,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,iDACA,eAAC2D,EAAA,EAAD,CAAMC,SAAUqB,EAAhB,UACE,eAACtB,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,cACLC,MAAO7B,EACP2B,KAAK,WACLG,YAAY,eACZC,SAAU,SAAAhB,GAAK,OAAIyB,EAAezB,EAAMiB,OAAOH,aAGnD,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRE,KAAK,cACLC,MAAO5B,EACP0B,KAAK,WACLG,YAAY,eACZC,SAAU,SAAAhB,GAAK,OAAI0B,EAAe1B,EAAMiB,OAAOH,aAInD,cAACI,EAAA,EAAD,CAAQxE,UAAU,OAAOjB,QAAQ,UAAUmF,KAAK,SAAhD,6BCzDKgB,G,OARF,SAACC,GAEZ,OACE,qBAAKnF,UAAS,eAAUmF,EAAMnF,WAA9B,SACGmF,EAAMC,aCkBEC,G,OArBQ,SAACF,GAMtB,OACE,qBAAKnF,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQoE,MAAOe,EAAMG,SAAUhB,SATP,SAAChB,GAC7B,IAAMiC,EAAejC,EAAMiB,OAAOH,MAClC7E,QAAQC,IAAI+F,GACZJ,EAAMK,eAAeD,IAMjB,UACE,wBAAQnB,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,qBCFKqB,MAdf,SAAsBN,GACpB,IAAMO,EAAU,IAAIC,KAAKR,EAAMS,MACzBC,EAAQH,EAAQI,eAAe,QAAS,CAAED,MAAO,SACjDE,EAAOL,EAAQM,cACfC,EAAMP,EAAQI,eAAe,QAAS,CAAEG,IAAK,YACnD,OACE,sBAAKjG,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsC6F,IACtC,qBAAK7F,UAAU,qBAAf,SAAqC+F,IACrC,qBAAK/F,UAAU,oBAAf,SAAoCiG,QCS3BC,EAfK,SAACf,GACnB,OACE,6BACE,cAAC,EAAD,CAAMnF,UAAU,eAAhB,SACE,8BACE,sBAAKA,UAAU,eAAf,UACE,6BAAKmF,EAAMgB,QACX,qBAAKnG,UAAU,sBAAf,oBAA0CmF,EAAMiB,UAChD,cAAC,EAAD,CAAaR,KAAMT,EAAMS,iBCatBS,G,OAtBM,SAAClB,GACpB,IAAMmB,EAAqBnB,EAAMoB,OAAOC,KAAI,SAAAC,GAC1C,OAAO,cAAC,EAAD,CAA0BN,MAAOM,EAAIN,MAAOC,OAAQK,EAAIL,OAAQR,KAAMa,EAAIb,MAAxDa,EAAI/G,OAGzBgH,EAAkB,oBAAI1G,UAAU,0BAAd,+BAExB,OAA4B,IAAxBmF,EAAMoB,OAAOI,OACR,6BACJD,IAOG,oBAAI1G,UAAU,gBAAd,SACLsG,M,QCDUM,G,OAjBE,SAACzB,GAChB,IAAI0B,EAAgB,KAMpB,OAJI1B,EAAM2B,SAAW,IACnBD,EAAgBE,KAAKC,MAAO7B,EAAMf,MAAQe,EAAM2B,SAAY,KAAO,KAInE,sBAAK9G,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,kBAAkBY,MAAO,CAAEqG,OAAQJ,OAEpD,qBAAK7G,UAAU,mBAAf,SAAmCmF,EAAM+B,aCDhCC,G,OAVD,SAAAhC,GACZ,IAAMiC,EAAkBjC,EAAMkC,WAAWb,KAAI,SAAAc,GAAS,OAAIA,EAAUlD,SAC9DmD,EAAeR,KAAKS,IAAL,MAAAT,KAAI,YAAQK,IACjC,OACE,qBAAKpH,UAAU,QAAf,SACGmF,EAAMkC,WAAWb,KAAI,SAAA9C,GAAI,OAAI,cAAC,EAAD,CAA2BU,MAAOV,EAAKU,MAAO0C,SAAUS,EAAcL,MAAOxD,EAAKwD,OAAnExD,EAAKwD,cCgBzCO,EAtBO,SAAAtC,GACpB,IAD6B,EACvBuC,EAAiB,CACrB,CAAER,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,GACvB,CAAE8C,MAAO,MAAO9C,MAAO,IAbI,cAgBPe,EAAMwC,UAhBC,IAgB7B,2BAAsC,CAAC,IAA5BC,EAA2B,QAEpCF,EADqB,IAAI/B,KAAKiC,EAAQhC,MAAMiC,YACfzD,OAASwD,EAAQxB,QAlBnB,8BAoB7B,OAAO,cAAC,EAAD,CAAOiB,WAAcK,KCoBfI,EApCE,SAAC3C,GAChB,MAAwCjG,mBAAS,QAAjD,mBAAO6I,EAAP,KAAqBC,EAArB,KASMC,EAAgB9C,EAAM+C,MAAMC,QAAO,SAAAC,GACvC,MAAO,GAAK,IAAIzC,KAAKyC,EAAKxC,MAAMI,gBAAkB+B,KAOpD,OACE,eAAC,EAAD,CAAM/H,UAAU,WAAhB,UACE,cAAC,EAAD,CAAgBsF,SAAUyC,EAAcvC,eAdhB,SAAA6C,GAC1B9I,QAAQC,IAAI,eACZwI,EAAgBK,MAcd,cAAC,EAAD,CAAeV,SAAUM,IACzB,cAAC,EAAD,CAAc1B,OAAQ0B,QC3BfK,EAAgB,SAAChI,GAC5B,OAAOsB,IAAM2G,IAAIlH,EAAS,YAAa,CACrCc,QAAS,CACPC,cAAc,UAAD,OAAY9B,EAAK+B,WAKvBmG,EAAc,SAAC9I,EAAIY,GAC9B,OAAOsB,IAAM2G,IAAN,UAAalH,EAAb,qBAAgC3B,GAAM,CAC3CyC,QAAS,CACPC,cAAc,UAAD,OAAY9B,EAAK+B,WAKvBoG,EAAgB,SAAC/I,EAAIY,GAChC,OAAOsB,IAAMM,OAAN,UAAgBb,EAAhB,qBAAmC3B,GAAM,CAC9CyC,QAAS,CACPC,cAAc,UAAD,OAAY9B,EAAK+B,WAKvBqG,EAAgB,SAAChJ,EAAIyG,EAAOC,EAAQR,EAAMtF,GACrD,OAAOsB,IAAMa,MAAN,UACFpB,EADE,qBACiB3B,GACtB,CAAEkI,QAAS,CAAEzB,QAAOC,SAAQR,SAC5B,CACEzD,QAAS,CACPC,cAAc,UAAD,OAAY9B,EAAK+B,WAMzBsG,EAAgB,SAACxC,EAAOC,EAAQR,EAAMtF,GACjD,OAAOsB,IAAMC,KAAN,UACFR,EADE,aAEL,CAAEuG,QAAS,CAAEzB,QAAOC,SAAQR,SAC5B,CACEzD,QAAS,CACPC,cAAc,UAAD,OAAY9B,EAAK+B,WCKvBuG,GA7CF,SAACzD,GACZ,MAA+BjG,mBAAS,IAAxC,mBAAO0I,EAAP,KAAgBiB,EAAhB,KAoBA,OAlBApJ,qBAAU,WACR,IAAMqJ,EAAa,uCAAG,4BAAAvF,EAAA,+EAEA+E,EAAcnD,EAAM7E,MAFpB,OAEZmD,EAFY,OAGlBoF,EAAYpF,EAAIC,KAAKiE,UAHH,gDAKlBxC,EAAMrC,SAAS,CACb9D,QAAS,8BACTC,QAAS,KAAMA,QACfF,QAAS,WARO,yDAAH,qDAYfoG,EAAM7E,MACRwI,MAED,CAAC3D,EAAMwC,WAENxC,EAAM7E,KAEN,qCACE,oDACA,cAAC,EAAD,CAAU4H,MAAON,OAKnB,gCACE,iDACA,sEACA,8CACA,wDCEOmB,GAtCK,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,aAAc7C,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,OAAQR,EAAyC,EAAzCA,KAAMqD,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC7E,OAAQ,eAACxF,EAAA,EAAD,CAAMC,SAAUoF,EAAhB,UACN,eAACrF,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CACEK,YAAY,0BACZF,KAAK,QACLC,MAAO+B,EACP7B,SAAU,SAAAhB,GAAK,OAAI2F,EAAS3F,EAAMiB,OAAOH,aAI7C,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,SAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,qBACA,cAACJ,EAAA,EAAKK,QAAN,CACEK,YAAY,+BACZH,KAAK,SACLC,KAAK,SACLC,MAAOgC,EACP9B,SAAU,SAAAhB,GAAK,OAAI4F,EAAU5F,EAAMiB,OAAOH,aAI9C,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CACEK,YAAY,cACZH,KAAK,OACLC,KAAK,OACLC,MAAOwB,EACPtB,SAAU,SAAAhB,GAAK,OAAI6F,EAAQ7F,EAAMiB,OAAOH,aAG5C,cAACI,EAAA,EAAD,CAAQxE,UAAU,OAAOjB,QAAQ,UAAUmF,KAAK,SAAhD,wBCwBWkF,GApDO,SAAC,GAAwB,IAAtB9I,EAAqB,EAArBA,KAAMwC,EAAe,EAAfA,SAC7B,EAA0B5D,mBAAS,IAAnC,mBAAOiH,EAAP,KAAc8C,EAAd,KACA,EAA4B/J,mBAAS,IAArC,mBAAOkH,EAAP,KAAe8C,EAAf,KACA,EAAwBhK,mBAAS,IAAjC,mBAAO0G,EAAP,KAAauD,EAAb,KACA,EAAkCjK,mBAAS,MAA3C,mBAAOmK,EAAP,KAAkBC,EAAlB,KAEMN,EAAY,uCAAG,WAAM1F,GAAN,eAAAC,EAAA,6DACnBD,EAAME,iBADa,kBAICmF,EAAcxC,EAAOC,EAAQ,IAAIT,KAAKC,GAAOtF,GAJ9C,OAIXmD,EAJW,OAKjBlE,QAAQC,IAAIiE,EAAIC,MAChB4F,EAAa7F,EAAIC,KAAKkE,QAAQ2B,KAE9BzG,EAAS,CACP9D,QAAS,kBACTC,QAAQ,WAAD,OAAakH,EAAb,kBACPpH,QAAS,YAXM,kDAcjB+D,EAAS,CACP9D,QAAS,2BACTC,QAAS,KAAMA,QACfF,QAAS,WAjBM,0DAAH,sDAuBlB,OAAKuB,EAEM+I,EAEF,cAAC,IAAD,CAAUlJ,GAAE,oBAAekJ,KAGlC,qBAAKrJ,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,oBAAIA,UAAU,eAAd,4BACA,cAAC,GAAD,CACEgJ,aAAcA,EACd7C,MAAOA,EACPC,OAAQA,EACRR,KAAMA,EACNqD,SAAUA,EACVC,UAAWA,EACXC,QAASA,SAhBR,cAAC,IAAD,CAAUhJ,GAAG,O,UCqCTqJ,GArEO,SAAC,GAAwB,IAAtBlJ,EAAqB,EAArBA,KAAMwC,EAAe,EAAfA,SAC7B,EAA8B5D,mBAAS,MAAvC,mBAAO0I,EAAP,KAAgB6B,EAAhB,KACA,EAA8BvK,oBAAS,GAAvC,mBAAOwK,EAAP,KAAgBC,EAAhB,KACQjK,EAAOkK,cAAPlK,GAER,IAAKY,EACH,OAAO,cAAC,IAAD,CAAUH,GAAG,MAGtBV,qBAAU,YACO,uCAAG,4BAAA8D,EAAA,+EAEIiF,EAAY9I,EAAIY,GAFpB,OAERmD,EAFQ,OAGdgG,EAAWhG,EAAIC,KAAKkE,SAHN,gDAKd9E,EAAS,CACP9D,QAAS,yBACTC,QAAS,KAAMA,QACfF,QAAS,WARG,yDAAH,qDAYf8K,KACC,IAEH,IAAMC,EAAiB,uCAAG,sBAAAvG,EAAA,+EAEhBkF,EAAc/I,EAAIY,GAFF,OAGtBqJ,GAAW,GAHW,+CAKtB7G,EAAS,CACP9D,QAAS,2BACTC,QAAS,KAAMA,QACfF,QAAS,WARW,wDAAH,qDAavB,OAAK6I,EAMM8B,EACF,cAAC,IAAD,CAAUvJ,GAAG,cAGlB,qBAAKH,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,wBAGA,oBAAIA,UAAU,qBAAd,SAAoC4H,EAAQzB,QAC5C,mBAAGnG,UAAU,6BAAb,SAA2C4H,EAAQxB,SACnD,cAAC5B,EAAA,EAAD,CAAQzF,QAAQ,SAASgL,QAASD,EAAlC,4BAEA,cAAC,IAAD,CAAM3J,GAAE,oBAAeT,EAAf,SAAR,SACE,cAAC8E,EAAA,EAAD,CAAQzF,QAAQ,UAAUmF,KAAK,SAA/B,qCAnBR,cAAC8F,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAMlK,UAAU,kBAAhB,2BC8BOmK,GAxEO,SAAC,GAAwB,IAAtB7J,EAAqB,EAArBA,KAAMwC,EAAe,EAAfA,SAC7B,EAA0B5D,mBAAS,IAAnC,mBAAOiH,EAAP,KAAc8C,EAAd,KACA,EAA4B/J,mBAAS,IAArC,mBAAOkH,EAAP,KAAe8C,EAAf,KACA,EAAwBhK,mBAAS,IAAjC,mBAAO0G,EAAP,KAAauD,EAAb,KACA,EAA8BjK,oBAAS,GAAvC,mBAAOkL,EAAP,KAAgBC,EAAhB,KACQ3K,EAAOkK,cAAPlK,GAIR,IAAKY,EACH,OAAO,cAAC,IAAD,CAAUH,GAAG,MAGtBV,qBAAU,YAIO,uCAAG,4BAAA8D,EAAA,+EAEIiF,EAAY9I,EAAIY,GAFpB,OAERmD,EAFQ,OAGdwF,EAASxF,EAAIC,KAAKkE,QAAQzB,OAC1B+C,EAAUzF,EAAIC,KAAKkE,QAAQxB,QAC3B+C,EAAQ1F,EAAIC,KAAKkE,QAAQhC,MALX,gDAOd9C,EAAS,CACP9D,QAAS,yBACTC,QAAS,KAAMA,QACfF,QAAS,WAVG,yDAAH,qDAcf8K,KACC,IAEH,IAAMb,EAAY,uCAAG,WAAM1F,GAAN,SAAAC,EAAA,6DACnBD,EAAME,iBADa,kBAIXkF,EAAchJ,EAAIyG,EAAOC,EAAQR,EAAMtF,GAJ5B,OAKjB+J,GAAW,GALM,gDAOjBvH,EAAS,CACP9D,QAAS,2BACTC,QAAS,KAAMA,QACfF,QAAS,WAVM,yDAAH,sDAelB,OAAIqL,EAEK,cAAC,IAAD,CAAUjK,GAAE,oBAAeT,KAIlC,qBAAKM,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,8CACA,cAAC,GAAD,CACEgJ,aAAcA,EACd7C,MAAOA,EACPC,OAAQA,EACRR,KAAMA,EACNqD,SAAUA,EACVC,UAAWA,EACXC,QAASA,U,UC3CJjD,I,OApBK,SAACf,GACnB,OAEE,eAAC,KAAD,CAAMnF,UAAU,eAAhB,UACE,cAAC,IAAD,CAAMA,UAAU,4BAA4BG,GAAE,oBAAegF,EAAMyC,QAAQ2B,KAA3E,SACE,6BACGpE,EAAMyC,QAAQzB,OADRhB,EAAMyC,QAAQ2B,OAIzB,8BACE,gCACE,mBAAGvJ,UAAU,sBAAb,oBAAwCmF,EAAMyC,QAAQxB,UACtD,cAAC,EAAD,CAAaR,KAAMT,EAAMyC,QAAQhC,iBCwD5B0E,GAlEQ,SAAC,GAAiC,IAA/BhK,EAA8B,EAA9BA,KAAMwC,EAAwB,EAAxBA,SAAUyH,EAAc,EAAdA,QACxC,EAAgCrL,mBAAS,IAAzC,mBAAOyI,EAAP,KAAiBkB,EAAjB,KACA,IAAKvI,EACH,OAAO,cAAC,IAAD,CAAUH,GAAG,MAEtB,IAAM2I,EAAa,uCAAG,4BAAAvF,EAAA,+EAEA+E,EAAchI,GAFd,OAEZmD,EAFY,OAGlBoF,EAAYpF,EAAIC,KAAKiE,UACrB4C,EAAQ9G,EAAIC,KAAKiE,UAJC,gDAMlB7E,EAAS,CACP9D,QAAS,8BACTC,QAAS,KAAMA,QACfF,QAAS,WATO,yDAAH,qDAgBnB,GAHAU,qBAAU,WACRqJ,MACC,KACEnB,EACH,OACE,cAACqC,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAMlK,UAAU,kBAAhB,0BAIN,IAAMwK,EAAe7C,EAASnB,KAAI,SAACoB,GAAD,OAChC,cAAC,GAAD,CAGEA,QAASA,EACThC,KAAMgC,EAAQhC,KACdO,MAAOyB,EAAQzB,MACfC,OAAQwB,EAAQxB,OAChB9F,KAAMA,EACNwC,SAAUA,GANL8E,EAAQ2B,QAoBjB,OACE,cAAC,EAAD,CAAMvJ,UAAU,WAAhB,SACE,8BACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UAEE,oBAAIA,UAAU,gBAAd,yBACA,6BAAKwK,cCmBFC,GArEH,WACV,MAAwBvL,mBAAS,MAAjC,mBAAOoB,EAAP,KAAayC,EAAb,KACA,EAAkC7D,mBAAS,IAA3C,mBAAOwL,EAAP,KAAkBC,EAAlB,KACA,EAAwBzL,mBAAS,IAAjC,mBAAO0L,EAAP,KAAaL,EAAb,KAIMzH,EAAW,SAAC,GAAmC,IAAjC9D,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASF,EAAc,EAAdA,QAC9BW,EAAKmL,cACXF,GAAa,SAAAD,GAAS,4BAASA,GAAT,CAAoB,CAAE1L,UAASC,UAASF,UAASW,YAGzE,OACE,qCACE,cAAC,EAAD,CAAQY,KAAMA,IACboK,EAAUlE,KAAI,SAAA1D,GAAQ,OACrB,cAAC,EAAD,CAEE9D,QAAS8D,EAAS9D,QAClBD,QAAS+D,EAAS/D,QAClBE,QAAS6D,EAAS7D,QAClBS,GAAIoD,EAASpD,IAJRoD,EAASpD,OAOlB,sBAAMM,UAAU,YAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE8K,OAAK,EAACC,KAAK,IACXC,QAAS,cAAC,GAAD,CAAMrD,SAAUiD,EAAM9H,SAAUA,EAAUxC,KAAMA,MAE3D,cAAC,IAAD,CACEyK,KAAK,WACLC,QAAS,cAAC,EAAD,CAAQlI,SAAUA,EAAUC,QAASA,MAEhD,cAAC,IAAD,CACEgI,KAAK,WACLC,QAAS,cAAC,EAAD,CAAQlI,SAAUA,EAAUC,QAASA,MAEhD,cAAC,IAAD,CACEgI,KAAK,YACLC,QAAS,cAAC,EAAD,CAASlI,SAAUA,EAAU8B,UAnC9B,kBAAM7B,EAAQ,OAmCsCzC,KAAMA,MAEpE,cAAC,IAAD,CACEyK,KAAK,mBACLC,QAAS,cAAC,EAAD,CAAgBlI,SAAUA,EAAUxC,KAAMA,MAErD,cAAC,IAAD,CACEyK,KAAK,YACLC,QAAS,cAAE,GAAF,CAAiBlI,SAAUA,EAAUyH,QAASA,EAASjK,KAAMA,MAExE,cAAC,IAAD,CACEyK,KAAK,mBACLC,QAAS,cAAE,GAAF,CAAgBlI,SAAUA,EAAUxC,KAAMA,MAErD,cAAC,IAAD,CACEyK,KAAK,gBACLC,QAAS,cAAE,GAAF,CAAgBlI,SAAUA,EAAUxC,KAAMA,MAErD,cAAC,IAAD,CACEyK,KAAK,qBACLC,QAAS,cAAE,GAAF,CAAgBlI,SAAUA,EAAUxC,KAAMA,eCtEzD2K,GACJ,cAAC,IAAD,CAAeC,SAAUC,oBAAzB,SACE,cAAC,GAAD,MAIJC,IAASC,OAAOJ,GAAQK,SAASC,eAAe,U","file":"static/js/main.a2c6e9f1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\nimport { VscHome, VscAccount, VscSignIn, VscGraph, VscUnlock, VscSignOut, VscChecklist, VscEdit } from 'react-icons/vsc'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/' className='nav-link'><VscGraph></VscGraph></NavLink>\n    <NavLink to='/expenses' className='nav-link'><VscChecklist/></NavLink>\n    <NavLink to='/expenses/create' className='nav-link'><VscEdit/></NavLink>\n    <NavLink to='/change-password' className='nav-link'><VscUnlock/></NavLink>\n    <NavLink to='/sign-out' className='nav-link'><VscSignOut/></NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/' className='nav-link'><VscHome></VscHome></NavLink>\n    <NavLink to='/sign-up' className='nav-link'><VscSignIn></VscSignIn></NavLink>\n    <NavLink to='/sign-in' className='nav-link'><VscAccount></VscAccount></NavLink>\n  </>\n)\n\n// const alwaysOptions = (\n//   <>\n//     <NavLink to='/' className='nav-link'><VscHome></VscHome></NavLink>\n//   </>\n\n// )\n\nconst Header = ({ user }) => (\n  <Navbar bg='dark' variant='dark' expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Expense-Tracker</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\n          )}\n          {/* {alwaysOptions} */}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://damp-thicket-22640.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React from 'react'\nimport './Card.css'\n\nconst Card = (props) => {\n  // const classes = 'card ' + props.className\n  return (\n    <div className={`card ${props.className}`}>\n      {props.children}\n    </div>\n  )\n}\nexport default Card\n","import React from 'react'\n\nimport './ExpenseFilter.css'\n\nconst ExpensesFilter = (props) => {\n  const dropDownChangeHandler = (event) => {\n    const filterChange = event.target.value\n    console.log(filterChange)\n    props.onChangeFilter(filterChange)\n  }\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropDownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default ExpensesFilter\n","import React from 'react'\nimport './ExpenseDate.css'\nfunction ExpenseDate (props) {\n  const newDate = new Date(props.date)\n  const month = newDate.toLocaleString('en-US', { month: 'long' })\n  const year = newDate.getFullYear()\n  const day = newDate.toLocaleString('en-US', { day: '2-digit' })\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  )\n}\n\nexport default ExpenseDate\n","import React from 'react'\nimport './ExpenseItem.css'\nimport ExpenseDate from './ExpenseDate'\nimport Card from '../UI/Card/Card'\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <div>\n          <div className='expense-item'>\n            <h1>{props.title}</h1>\n            <div className='expense-item__price'>{`$${props.amount}`}</div>\n            <ExpenseDate date={props.date}></ExpenseDate>\n          </div>\n        </div>\n      </Card>\n    </li>\n  )\n}\nexport default ExpenseItem\n","import React from 'react'\nimport ExpenseItem from './ExpenseItem'\nimport './ExpensesList.css'\n\nconst ExpensesList = (props) => {\n  const mapFilteredExpense = props.fItems.map(ele => {\n    return <ExpenseItem key={ele.id} title={ele.title} amount={ele.amount} date={ele.date} />\n  })\n\n  const expensesContent = <h2 className=\"expenses-list__fallback\">No data Available</h2>\n\n  if (props.fItems.length === 0) {\n    return <ul>\n      {expensesContent}\n    </ul>\n\n    // expensesContent = props.fItems.map(ele => {\n    //     return <ExpenseItem key={ele.id} title={ele.title} amount={ele.amount} date={ele.date} />\n    // })\n  }\n  return (<ul className=\"expenses-list\">\n    {mapFilteredExpense}\n  </ul>\n  )\n}\n\nexport default ExpensesList\n","import React from 'react'\nimport './ChartBar.css'\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%'\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  )\n}\n\nexport default ChartBar\n","import React from 'react'\nimport ChartBar from './ChartBar'\nimport './Chart.css'\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\n  const totalMaximum = Math.max(...dataPointValues)\n  return (\n    <div className='chart'>\n      {props.dataPoints.map(data => <ChartBar key={data.label} value={data.value} maxValue={totalMaximum} label={data.label}/>)}\n    </div>\n  )\n}\n\nexport default Chart\n","import React from 'react'\nimport Chart from './Chart/Chart'\n\nconst ExpensesChart = props => {\n  const chartDataPoint = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 }\n  ]\n\n  for (const expense of props.expenses) {\n    const expenseMonth = new Date(expense.date).getMonth()\n    chartDataPoint[expenseMonth].value += expense.amount\n  }\n  return <Chart dataPoints = {chartDataPoint}/>\n}\nexport default ExpensesChart\n","import Card from '../UI/Card/Card'\nimport ExpensesFilter from './ExpenseFilter'\nimport './Expenses.css'\nimport React, { useState } from 'react'\nimport ExpensesList from './ExpensesList'\nimport ExpensesChart from './ExpensesChart'\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2020')\n\n  // const mapAllExpense = props.items.map(ele=>{\n  //     return <ExpenseItems key={ele.title} title={ele.title} amount={ele.amount} date={ele.date} />\n  // })\n  const filterChangeHandler = selectedYear => {\n    console.log('Expenses.js')\n    setFilteredYear(selectedYear)\n  }\n  const filteredItems = props.items.filter(item => {\n    return '' + new Date(item.date).getFullYear() === filteredYear\n  })\n\n  //   const mapFilteredExpense = filteredItems.map(ele=>{\n  //     return <ExpenseItems key={ele.title} title={ele.title} amount={ele.amount} date={ele.date} />\n  // })\n\n  return (\n    <Card className='expenses'>\n      <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\n      {/* {mapAllExpense} */}\n      <ExpensesChart expenses={filteredItems}></ExpensesChart>\n      <ExpensesList fItems={filteredItems}/>\n\n      {/* <ExpenseItems title={props.items[0].title} amount={props.items[0].amount} date={props.items[0].date} />\n\n<ExpenseItems title={props.items[1].title} amount={props.items[1].amount} date={props.items[1].date} />\n\n<ExpenseItems title={props.items[2].title} amount={props.items[2].amount} date={props.items[2].date} />\n\n<ExpenseItems title={props.items[3].title} amount={props.items[3].amount} date={props.items[3].date} /> */}\n    </Card>\n  )\n}\n\nexport default Expenses\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const indexExpenses = (user) => {\n  return axios.get(apiUrl + '/expenses', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const showExpense = (id, user) => {\n  return axios.get(`${apiUrl}/expenses/${id}`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const deleteExpense = (id, user) => {\n  return axios.delete(`${apiUrl}/expenses/${id}`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const updateExpense = (id, title, amount, date, user) => {\n  return axios.patch(\n    `${apiUrl}/expenses/${id}`,\n    { expense: { title, amount, date } },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n\nexport const createExpense = (title, amount, date, user) => {\n  return axios.post(\n    `${apiUrl}/expenses`,\n    { expense: { title, amount, date } },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Expenses from '../../components/Expenses/Expenses'\nimport { indexExpenses } from '../../api/expenseApi'\n// import { Link } from 'react-router-dom'\n\nconst Home = (props) => {\n  const [expense, setExpenses] = useState([])\n\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const res = await indexExpenses(props.user)\n        setExpenses(res.data.expenses)\n      } catch (error) {\n        props.msgAlert({\n          heading: 'Expense List failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    if (props.user) {\n      fetchExpenses()\n    }\n  }, [props.expenses])\n\n  if (props.user) {\n    return (\n      <>\n        <h1>Create an Expense!</h1>\n        <Expenses items={expense} />\n      </>\n    )\n  } else {\n    return (\n      <div>\n        <h1>Hello im home! </h1>\n        <h2>Start keeping track of your finances</h2>\n        <h3>The fun way!</h3>\n        <p>you should Sign up!</p>\n        {/* <Link to='/sign-up'> <button>Sign up!</button>\n        </Link>\n        <Link to='/sign-in'>\n          <button>Sign in!</button>\n        </Link> */}\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst ExpenseForm = ({ handleSubmit, title, amount, date, setTitle, setAmount, setDate }) => {\n  return (<Form onSubmit={handleSubmit}>\n    <Form.Group controlId='title'>\n      <Form.Label>Title</Form.Label>\n      <Form.Control\n        placeholder='what do you have to do?'\n        name='title'\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n      />\n    </Form.Group>\n\n    <Form.Group controlId='amount'>\n      <Form.Label>Amount</Form.Label>\n      <Form.Control\n        placeholder='e.g. not get covid this week'\n        type='number'\n        name='amount'\n        value={amount}\n        onChange={event => setAmount(event.target.value)}\n      />\n    </Form.Group>\n\n    <Form.Group controlId='date'>\n      <Form.Label>Date</Form.Label>\n      <Form.Control\n        placeholder='Pick a Date'\n        type='date'\n        name='date'\n        value={date}\n        onChange={event => setDate(event.target.value)}\n      />\n    </Form.Group>\n    <Button className='mt-2' variant='warning' type='submit'>Submit</Button>\n  </Form>\n  )\n}\n\nexport default ExpenseForm\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\n// Import MovieForm:\nimport ExpenseForm from '../../UI/Form/ExpenseForm'\nimport { createExpense } from '../../../api/expenseApi'\n// import Background from '../Visuals/images/pencil_background.jpg'\n\nconst ExpenseCreate = ({ user, msgAlert }) => {\n  const [title, setTitle] = useState('')\n  const [amount, setAmount] = useState('')\n  const [date, setDate] = useState('')\n  const [createdId, setCreatedId] = useState(null)\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n\n    try {\n      const res = await createExpense(title, amount, new Date(date), user)\n      console.log(res.data)\n      setCreatedId(res.data.expense._id)\n\n      msgAlert({\n        heading: 'Expense Created',\n        message: `Created ${title} successfully.`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to create expense',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  // if user is null, redirect to home page\n  if (!user) {\n    return <Navigate to='/' />\n  } else if (createdId) {\n    // if movie has been created,Redirect to the 'show' page\n    return <Navigate to={`/expenses/${createdId}`} />\n  }\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3 className='expense-text'>Create Expense</h3>\n        <ExpenseForm\n          handleSubmit={handleSubmit}\n          title={title}\n          amount={amount}\n          date={date}\n          setTitle={setTitle}\n          setAmount={setAmount}\n          setDate={setDate}\n        />\n      </div>\n    </div>\n  )\n}\nexport default ExpenseCreate\n","import React, { useState, useEffect } from 'react'\nimport { Link, Navigate, useParams } from 'react-router-dom'\nimport { Spinner, Button } from 'react-bootstrap'\n\nimport { deleteExpense, showExpense } from '../../../api/expenseApi'\n\nconst ModifyExpense = ({ user, msgAlert }) => {\n  const [expense, setExpense] = useState(null)\n  const [deleted, setDeleted] = useState(false)\n  const { id } = useParams()\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await showExpense(id, user)\n        setExpense(res.data.expense)\n      } catch (error) {\n        msgAlert({\n          heading: 'Expense failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleDeleteClick = async () => {\n    try {\n      await deleteExpense(id, user)\n      setDeleted(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to delete expense',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!expense) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  } else if (deleted) {\n    return <Navigate to='/expenses' />\n  } else {\n    return (\n      <div className='expense-delete'>\n        <div className='row'>\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n            <div>\n              {/* <TaskDate date={task.date}></TaskDate> */}\n            </div>\n            <h2 className='expense-item-title'>{expense.title}</h2>\n            <p className='expense-delete-description'>{expense.amount}</p>\n            <Button variant='danger' onClick={handleDeleteClick}>Delete Expense\n            </Button>\n            <Link to={`/expenses/${id}/edit`}>\n              <Button variant='warning' type='submit'>Update Expense\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModifyExpense\n","import React, { useEffect, useState } from 'react'\nimport ExpenseForm from '../../UI/Form/ExpenseForm'\nimport { showExpense, updateExpense } from '../../../api/expenseApi'\nimport { Navigate, useParams } from 'react-router-dom'\n\nconst UpdateExpense = ({ user, msgAlert }) => {\n  const [title, setTitle] = useState('')\n  const [amount, setAmount] = useState('')\n  const [date, setDate] = useState('')\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams()\n\n  // if user is null, redirect to home page\n  // Note: Must check before useEffect, since it needs user\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    // When using async & await in a `useEffect` function\n    // We have to wrap our `async` code in a function:\n    // https://stackoverflow.com/a/53572588\n    const fetchData = async () => {\n      try {\n        const res = await showExpense(id, user)\n        setTitle(res.data.expense.title)\n        setAmount(res.data.expense.amount)\n        setDate(res.data.expense.date)\n      } catch (error) {\n        msgAlert({\n          heading: 'Failed to load Expense',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n\n    try {\n      await updateExpense(id, title, amount, date, user)\n      setUpdated(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to update Expense',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (updated) {\n    // Redirect to the 'show' page\n    return <Navigate to={`/expenses/${id}`} />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Edit Expense</h3>\n        <ExpenseForm\n          handleSubmit={handleSubmit}\n          title={title}\n          amount={amount}\n          date={date}\n          setTitle={setTitle}\n          setAmount={setAmount}\n          setDate={setDate}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default UpdateExpense\n","\nimport React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport ExpenseDate from '../../../Expenses/ExpenseDate'\nimport './ExpenseItem.css'\n\nconst ExpenseItem = (props) => {\n  return (\n\n    <Card className='expense-item'>\n      <Link className='expense-item link-warning' to={`/expenses/${props.expense._id}`}>\n        <h3 key={props.expense._id}>\n          {props.expense.title}\n        </h3>\n      </Link>\n      <div>\n        <div>\n          <p className='expense-item__price'>{`$${props.expense.amount}`}</p>\n          <ExpenseDate date={props.expense.date}/>\n          {/* <TaskDate date={props.task.date}></TaskDate> */}\n        </div>\n      </div>\n    </Card>\n  )\n}\n\nexport default ExpenseItem\n","import React, { useEffect, useState } from 'react'\nimport { Spinner } from 'react-bootstrap'\nimport { Navigate } from 'react-router-dom'\nimport { indexExpenses } from '../../../api/expenseApi'\nimport ExpenseItem from '../../UI/Form/ExpenseItem/ExpenseItem'\n// import './GetAllExpenses.css'\nimport Card from '../../UI/Card/Card'\n// import ExpenseDate from '../../Expenses/ExpenseDate'\n\nconst GetAllExpenses = ({ user, msgAlert, getList }) => {\n  const [expenses, setExpenses] = useState([])\n  if (!user) {\n    return <Navigate to='/'/>\n  }\n  const fetchExpenses = async () => {\n    try {\n      const res = await indexExpenses(user)\n      setExpenses(res.data.expenses)\n      getList(res.data.expenses)\n    } catch (error) {\n      msgAlert({\n        heading: 'Expense List failed to load',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n  useEffect(() => {\n    fetchExpenses()\n  }, [])\n  if (!expenses) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  }\n  const expensesList = expenses.map((expense) => (\n    <ExpenseItem\n      //   fetchExpenses={fetchExpenses}\n      key={expense._id}\n      expense={expense}\n      date={expense.date}\n      title={expense.title}\n      amount={expense.amount}\n      user={user}\n      msgAlert={msgAlert}>\n    </ExpenseItem>\n    // <li key={expense._id} user={user}>\n    //   <Card className=\"expense-item\">\n    //     <div>\n    //       <div className='expense-item'>\n    //         <h1>{expense.title}</h1>\n    //         <div className='expense-item__price'>{`$${expense.amount}`}</div>\n    //         <ExpenseDate date={expense.date}></ExpenseDate>\n    //       </div>\n    //     </div>\n    //   </Card>\n    // </li>\n  ))\n  return (\n    <Card className='expenses'>\n      <div>\n        <div className='row'>\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n            {/* <img className='background-image' src={Background} /> */}\n            <h3 className='expenses-text'>My Expenses</h3>\n            <ul>{expensesList}</ul>\n          </div>\n        </div>\n      </div>\n    </Card>\n  )\n}\n\nexport default GetAllExpenses\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport Home from './components/Home/Home'\nimport ExpenseCreate from './components/crud/CreateExpense/ExpenseCreate'\nimport ModifyExpense from './components/crud/ModifyExpense/ModifyExpense'\nimport UpdateExpense from './components/crud/ModifyExpense/UpdateExpense'\nimport GetAllExpenses from './components/crud/GetAllExpense/GetAllExpenses'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n  const [list, getList] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            exact path='/'\n            element={<Home expenses={list} msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-out'\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\n          />\n          <Route\n            path='/expenses'\n            element={< GetAllExpenses msgAlert={msgAlert} getList={getList} user={user} /> }\n          />\n          <Route\n            path='/expenses/create'\n            element={< ExpenseCreate msgAlert={msgAlert} user={user} /> }\n          />\n          <Route\n            path='/expenses/:id'\n            element={< ModifyExpense msgAlert={msgAlert} user={user} /> }\n          />\n          <Route\n            path='/expenses/:id/edit'\n            element={< UpdateExpense msgAlert={msgAlert} user={user} /> }\n          />\n\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}